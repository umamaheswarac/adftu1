{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"AzureSQLdb": {
			"type": "string"
		},
		"onprem": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/multiple_table_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_list",
						"type": "Lookup",
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select [tblname],[maxdate],inccolumn\nfrom [dbo].[TblList]"
							},
							"dataset": {
								"referenceName": "AzureSQL",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "load_data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"typeProperties": {
							"items": {
								"value": "@activity('get_list').output.values",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "tbl_load",
									"type": "Copy",
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select * from @{item().tblName}\nwhere @{item().inccolumn}>@{item().maxdate}",
												"type": "Expression"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "input",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "output",
											"type": "DatasetReference"
										}
									]
								}
							]
						}
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQL')]",
				"[concat(variables('factoryId'), '/datasets/input')]",
				"[concat(variables('factoryId'), '/datasets/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSQLdb')]",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tblname",
						"type": "varchar"
					},
					{
						"name": "maxdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[TblList]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('onprem')]",
					"type": "LinkedServiceReference"
				},
				"type": "SqlServerTable",
				"schema": []
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSQLdb')]",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": {
						"value": "@item().tblname",
						"type": "Expression"
					}
				}
			}
		}
	]
}